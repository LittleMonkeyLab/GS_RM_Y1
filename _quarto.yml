project:
  type: website
website:
  title: GoldRMy1
  navbar:
    background: primary
    search: true
    left:
      - text: "Home"
        href: index.qmd
      - text: "Lectures"
        href: lectures.qmd
      - text: "Labs"
        href: labs.qmd
      - text: "DataSkills"
        href: dataskills.qmd
      - text: "R Resources"
        href: r-resources.qmd

    right:
      - icon: github
        href: https://github.com/LittleMonkeyLab/Hack2theFuture
        aria-label: GitHub
      - icon: quarto
        href: https://quarto.org/
        aria-label: Quarto
      - icon: R
        href: https://www.r-project.org/
        aria-label: R

  sidebar: 
    style: "docked"
    search: true
    collapse-level: 0
    contents: 
      - section: "Week 01"
        contents:
          - href: worksheets/worksheet01/lab.qmd
            text: Lab Worksheet Week 01
          - href: week01/01-ttests.qmd
            text: Week 01 Reading
          - href: week01/lab.qmd
            text: Week 01 Lab
          - href: week01/dataskills.qmd
            text: Week 01 DataSkills
      - text: "---"
      - section: "Demonstrations"
        contents:
          - auto: "demos/*-demo.qmd"

  page-footer: 
    left: "An example website with quarto-webr."
    right: 
      - icon: github
        href: https://github.com/coatless/quarto-webr

format:
  html:
    theme:
    - cosmo
    css:
    - styles.css
    - include/webex.css
    code-link: true
    mainfont: Atkinson Hyperlegible
    monofont: Source Code Pro
    grid:
      sidebar-width: 250px
      margin-width: 150px
    toc: true
    toc-depth: 2
    include-after-body: include/webex.js
    embed-resources: true

# Set default options for every webpage that may or may not include webR.
webr: 
  show-startup-message: false    # Display status of webR initialization
#  show-header-message: false     # Check to see if COOP&COEP headers are set for speed.
#  packages: ['ggplot2', 'dplyr'] # Pre-install dependencies
#  base-url: ''                   # Base URL used for specifying where R WebAssembly binaries should be located
#  home-dir: '/home/rstudio'      # Customize where the working directory is
#  channel-type: 'post-message'   # Specify communication channel
#  service-worker-url: ''         # URL from where to load JavaScript worker scripts when loading webR with the ServiceWorker communication channel.

# Attach webR to every page
filters:
  - webr